{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jgensler/dev/text-me-maybe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jgensler/dev/text-me-maybe/packages/frontend/src/Messages.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query {\\n        messages {\\n            body\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Message from './Message';\nexport const MESSAGES = gql(_templateObject());\nexport default function Messages() {\n  const _useQuery = useQuery(MESSAGES),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column-reverse'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, data.messages.reverse().map(message => React.createElement(Message, {\n    message: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/jgensler/dev/text-me-maybe/packages/frontend/src/Messages.js"],"names":["React","useEffect","useState","useQuery","gql","Message","MESSAGES","Messages","loading","error","data","display","flexDirection","messages","reverse","map","message"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,QAAQ,GAAGF,GAAH,mBAAd;AAQP,eAAe,SAASG,QAAT,GAAoB;AAAA,oBACEJ,QAAQ,CAACG,QAAD,CADV;AAAA,QACvBE,OADuB,aACvBA,OADuB;AAAA,QACdC,KADc,aACdA,KADc;AAAA,QACPC,IADO,aACPA,IADO;;AAG/B,MAAIF,OAAJ,EAAa;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAED,SACI;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACG,QAAL,CAAcC,OAAd,GAAwBC,GAAxB,CAA4BC,OAAO,IAChC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAOH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport Message from './Message';\n\nexport const MESSAGES = gql`\n    query {\n        messages {\n            body\n        }\n    }\n`;\n\nexport default function Messages() {\n    const { loading, error, data } = useQuery(MESSAGES);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column-reverse' }}>\n            {data.messages.reverse().map(message => (\n                <Message message={message} />\n            ))}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}