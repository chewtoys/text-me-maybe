{"ast":null,"code":"import _slicedToArray from \"/Users/jgensler/dev/text-me-maybe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jgensler/dev/text-me-maybe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jgensler/dev/text-me-maybe/packages/frontend/src/SendMessage.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation SendMessage($message: String!) {\\n        sendMessage(body: $message) {\\n            body\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SendIcon from '@material-ui/icons/Send';\nimport { MESSAGES } from './Messages';\nimport client from './client';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: theme.spacing(2),\n    background: 'linear-gradient(0deg, rgba(0, 0, 0, 0.1), transparent)',\n    display: 'flex'\n  }\n}));\nconst SEND_MESSAGE = gql(_templateObject());\nexport default function SendMessage() {\n  const classes = useStyles();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useMutation = useMutation(SEND_MESSAGE, {\n    variables: {\n      message\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        sendMessage = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        loading = _useMutation2$.loading,\n        data = _useMutation2$.data;\n\n  useEffect(() => {\n    if (data) {\n      // Force a refetch of messages from network\n      client.query({\n        query: MESSAGES,\n        fetchPolicy: 'network-only'\n      });\n      setMessage('');\n    }\n  }, [data]);\n  return React.createElement(\"div\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Message...\",\n    value: message,\n    disabled: loading,\n    onChange: e => setMessage(e.target.value),\n    fullWidth: true,\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"primary\",\n        onClick: sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(SendIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jgensler/dev/text-me-maybe/packages/frontend/src/SendMessage.js"],"names":["React","useState","useEffect","gql","useMutation","makeStyles","TextField","IconButton","InputAdornment","SendIcon","MESSAGES","client","useStyles","theme","container","padding","spacing","background","display","SEND_MESSAGE","SendMessage","classes","message","setMessage","variables","sendMessage","loading","data","query","fetchPolicy","e","target","value","endAdornment"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACnCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAEPC,IAAAA,UAAU,EAAE,wDAFL;AAGPC,IAAAA,OAAO,EAAE;AAHF;AADwB,CAAL,CAAN,CAA5B;AAQA,MAAMC,YAAY,GAAGhB,GAAH,mBAAlB;AAQA,eAAe,SAASiB,WAAT,GAAuB;AAClC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;;AADkC,oBAEJX,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,QAE3BqB,OAF2B;AAAA,QAElBC,UAFkB;;AAAA,uBAGOnB,WAAW,CAACe,YAAD,EAAe;AAAEK,IAAAA,SAAS,EAAE;AAAEF,MAAAA;AAAF;AAAb,GAAf,CAHlB;AAAA;AAAA,QAG3BG,WAH2B;AAAA;AAAA,QAGZC,OAHY,kBAGZA,OAHY;AAAA,QAGHC,IAHG,kBAGHA,IAHG;;AAKlCzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIyB,IAAJ,EAAU;AACN;AACAhB,MAAAA,MAAM,CAACiB,KAAP,CAAa;AAAEA,QAAAA,KAAK,EAAElB,QAAT;AAAmBmB,QAAAA,WAAW,EAAE;AAAhC,OAAb;AACAN,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GANQ,EAMN,CAACI,IAAD,CANM,CAAT;AAQA,SACI;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACP,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,YADV;AAEI,IAAA,KAAK,EAAEQ,OAFX;AAGI,IAAA,QAAQ,EAAEI,OAHd;AAII,IAAA,QAAQ,EAAEI,CAAC,IAAIP,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ7B;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,UAAU,EAAE;AACRC,MAAAA,YAAY,EACR,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAER,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAFI,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAoBH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SendIcon from '@material-ui/icons/Send';\nimport { MESSAGES } from './Messages';\nimport client from './client';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(2),\n        background: 'linear-gradient(0deg, rgba(0, 0, 0, 0.1), transparent)',\n        display: 'flex'\n    }\n}));\n\nconst SEND_MESSAGE = gql`\n    mutation SendMessage($message: String!) {\n        sendMessage(body: $message) {\n            body\n        }\n    }\n`;\n\nexport default function SendMessage() {\n    const classes = useStyles();\n    const [message, setMessage] = useState('');\n    const [sendMessage, { loading, data }] = useMutation(SEND_MESSAGE, { variables: { message } });\n\n    useEffect(() => {\n        if (data) {\n            // Force a refetch of messages from network\n            client.query({ query: MESSAGES, fetchPolicy: 'network-only' });\n            setMessage('');\n        }\n    }, [data]);\n\n    return (\n        <div className={classes.container}>\n            <TextField\n                label=\"Message...\"\n                value={message}\n                disabled={loading}\n                onChange={e => setMessage(e.target.value)}\n                fullWidth\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <IconButton color=\"primary\" onClick={sendMessage}>\n                                <SendIcon />\n                            </IconButton>\n                        </InputAdornment>\n                    )\n                }}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}